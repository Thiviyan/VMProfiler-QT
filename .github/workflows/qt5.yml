name: CMake

on: [push, pull_request]

jobs:
  build:
    # Skip building pull requests from the same repository
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository) }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-20.04, macos-11]
    env:
      BUILD_TYPE: Release
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v3

    - name: Enable Developer Command Prompt
      if: ${{ runner.os == 'Windows' }}
      uses: ilammy/msvc-dev-cmd@v1.7.0

    - name: Set up GCC
      if: ${{ runner.os == 'Linux' }}
      uses: egor-tensin/setup-gcc@v1
      with:
        version: 11
#    -
#      name: Check mingw g++ version
#      run: |
#        Write-Output (Get-Command g++.exe).Path
#        g++.exe --version
    -
      name: Install correct version of mingw
      if: ${{ runner.os == 'Windows' }}
      uses: crazy-max/ghaction-chocolatey@v1
      with:
        args: install mingw   -y
#    -
#      name: Check mingw directory
#      run: |
#        ls C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        host: "windows"
        target: "desktop"
        version: "5.15.2"
        arch: "win64_msvc2019_64"
        dir: "${{github.workspace}}/qt"
        install-deps: "true"
    - name: Set Qt path and refresh
      run: |
        echo "${{github.workspace}}/qt/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        refreshenv
        #Write-Output (Get-Command g++.exe).Path
        #g++.exe --version
#    -
#      name: Check availability of libraries
#      run: |
#        ls ${{github.workspace}}/qt/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/lib/
#    -
#      name: Check availability of binaries
#      run: |
#        ls ${{github.workspace}}/qt/Qt/${{ env.QT_VERSION }}/${{ env.MINGW_PATH }}/bin/
#    -
#      name: Prepend path
#      run: echo ":${{github.workspace}}/qt/Qt/${{ env.QT_VERSION }}/mingw73_32/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
#    -
#      name: Check QMake, CMake and make
#      run: |
#        Write-Output (Get-Command qmake.exe).Path
#        qmake.exe -version
#        Write-Output (Get-Command cmake.exe).Path
#        cmake.exe -version
#        Write-Output (Get-Command mingw32-make.exe).Path
#        mingw32-make.exe -version  

    - name: Build
      run: |
        cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DVTIL_BUILD_TESTS=ON
        cmake --build build --config ${{ env.BUILD_TYPE }} --parallel

    - name: Test
      run: |
        ctest --version
        cd build
        ctest . -C ${{ env.BUILD_TYPE }} --verbose
